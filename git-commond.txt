##git command
git log
git log -p master..newbranch 显示当前分支变更过程
git log --merge --left-right -p
git show 
git show-branch --more=10 修改记录
git show-branch master newbranch 查看master上所有操作记录
git show HEAD~2(最近第三次提交信息)
git diff
git revert 和 git reset  区别:http://yijiebuyi.com/blog/8f985d539566d0bf3b804df6be4e0c90.html
git reset:删除指定的commit,修改内容不会丢  
git reset --hard 回到某个版本原始状态，不关心后面的变更，新增内容丢失，
git reset --hard HEAD 回到merge之前的版本，在执行合并后git commit之前
git revert: 用一次新的commit来回滚之前的commit
git diff --cached:显示已经暂存的
git diff:
git diff commit1 commit2
git diff HEAD^ HEAD 当前HEAD版本与前一个HEAD^版本对比
git blame: 告诉你一个文件中每一行的修改者 eg: git blame -L 35, file.txt
git branch [name]
git branch -d
git checkout -m branch2 切换到分支2，并把当前分支变更合并到分支2git
git merge newbranch 切换到master分支，合并newbranch
git rebase master newbranch 把newbranch分支移动到master分支头
git stash
git stash pop
git show-branch stash
git stash list
------------------------------------
一次完美的合并方式:
git stash save 
git pull --rebase #拉取上游变更，变基到上游的头
git stash pop #恢复你的工作目录状态，可能会有冲突
git push
------------------------------------
git reflog show 引用日志
git clone
git fetch
git pull (跟git fetch类型，但是会合并修改)  ==> git fetch; git merge

------------------------------------
新建的分支必须显示的用分支名推送
git push origin branch
------------------------------------

git remote add origin branch 关联分支指回远程库，库名是origin(命名惯例而已)
